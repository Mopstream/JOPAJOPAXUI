syntax = "proto3";

enum AstNodeType {
    FILENAME_N = 0;
    INSERT_N = 1;
    SELECT_N = 2;
    UPDATE_N = 3;
    DELETE_N = 4;
    INDEX_N = 5;
    NODE_N = 6;
    LINK_N = 7;
    CONDITIONAL_N = 8;
    FILTER_N = 9;
    SET_N = 10;
    VAL_N = 11;
    NAME_N = 12;
    LIST_N = 13;
    ATTR_DESC_N = 14;
    LOGICAL_N = 15;
}

enum InsertTarget {
    I_NODE = 0;
    I_LINK = 1;
    I_INDEX = 2;
}

enum ValType {
    INT = 0;
    DOUBLE = 1;
    STRING = 2;
    BOOL = 3;
}

message String {
  uint32 size = 1;
  string str = 2;
}

message Attr {
  ValType type = 1;
  sint32 i = 2;
  double d = 3;
  String str = 4;
  bool b = 5;
}

message Set {
  uint32 node_id = 1;
  string attr_name = 2;
  Attr new_value = 3;
}

enum LogicalOp {
    AND = 0;
    OR = 1;
    NOT = 2;
}

enum Cmp {
    GT = 0;
    LT = 1;
    EQ = 2;
    GT_EQ = 3;
    LT_EQ = 4;
    SUBSTR = 5;
}

message Link {
    uint32 link_id = 1;
    uint32 node_from_type_id = 2;
    uint32 node_from_id = 3;
    uint32 node_to_type_id = 4;
    uint32 node_to_id = 5;
}

enum ValueType {
  NONE = 0;
  NAME = 1;
  INSERT_TARGET = 2;
  SET = 3;
  ATTR = 4;
  LOGICAL_OP = 5;
  CMP = 6;
  LINK = 7;
  CNT = 8;
  ATTR_DESC = 9;
}

message AttrType {
  string name = 1;
  ValType val = 2;
}

message Value {
  string name = 1;
  InsertTarget target = 2;
  Set set = 3;
  Attr attr = 4;
  LogicalOp l_op = 5;
  Cmp cmp = 6;
  Link link = 7;
  uint32 cnt = 8;
  AttrType attr_type = 9;
}

message Ast {
  Ast left = 1;
  Ast right = 2;
  AstNodeType type = 3;
  ValueType v_type = 4;
  Value val = 5;
}

enum ResponseType {
  NODE_R = 0;
  LINK_R = 1;
  INDEX_R = 2;
  STATUS_R = 3;
}

message LinkRef {
  uint32 link_type_id = 1;
  uint32 link_id = 2;
}

message Node {
  uint32 id = 1;
  repeated Attr attrs = 2;
  repeated LinkRef links_out = 3;
  repeated LinkRef links_in = 4;
}

enum ElementKind {
  NODE_I = 0;
  LINK_I = 1;
}

message NodeType {
  repeated AttrType attrs = 1;
}

message Index {
  string type_name = 1;
  ElementKind kind = 2;
  uint32 type_id = 3;
  NodeType description = 4;
  uint32 count = 5;
}

message Response {
  ResponseType type = 1;
  string status = 2;
  Node node = 4;
  Link link = 5;
  Index index = 6;
  Response inner = 7;
  Response response = 8;
}